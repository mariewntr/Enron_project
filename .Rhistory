df_message_status %>% filter(!is.na(status_recipient_email3)) %>% count()
df_message_status <- df_message_status %>% mutate(
#replace the NA value in the variable by the value in the 2nd variable
status_recipient = if_else((is.na(status_recipient) == TRUE), status_recipient_email3, status_recipient)) %>%
select(-status_recipient_email3) #drop the variable
#verification the merged work
df_message_status %>% filter(!is.na(status_recipient)) %>% count()
df_message_status <- df_message_status %>%
#withdraw the variable which are identifier
select(-c(mid, rfid, rid)) %>%
#change the name of the recipient email variable
mutate(recipient = rvalue) %>%
#order the different variable
select(date, sender, status_sender, rtype, recipient, status_recipient, subject, reference)
#cleaning of the object no more necessary in the environment
rm(employeelist, message, message_2, recipientinfo, recipientinfo_2, referenceinfo, referenceinfo_2, df_message_missing, message_merge, recipient_merge, EmailID_sender1, EmailID_sender2, EmailID_sender3, EmailID_sender4, EmailID_recipient1, EmailID_recipient2, EmailID_recipient3, EmailID_recipient4, employee_merge1, employee_merge2, employee_merge3, employee_merge4, end, start, length_email_content, employee_merge_final, employee_merge_final2, employee_merge_final_recipient, employee_merge_final_recipient2, dim_employee, dim_message, dim_recipient, dim_reference)
#topics list
topic_meeting <- c("message|origin|pleas|email|thank|attach|file|copi|inform|receiv|thank|all|time|meet|look|week|day|dont|vinc|talk")
topic_business_process <- c("enron|deal|agreement|chang|contract|corp|fax|houston|date|america|risk|analy|confidential|correction")
topic_core_business <- c("market|gas|price|power|company|energy|trade|busi|servic|manag")
topic_enron_event <- c("bankrup|SEC|MTM|fear")
df <- df_message_status %>% distinct(date, year, month, sender, status_sender, subject, reference) %>%
mutate(#count the number of email which contain at least one word in the list of each topic
topic_meeting = if_else(str_detect(subject, topic_meeting), 1, 0),
topic_business_process = if_else(str_detect(subject, topic_business_process), 1, 0),
topic_core_business = if_else(str_detect(subject, topic_core_business), 1, 0),
topic_enron_event = if_else(str_detect(subject, topic_enron_event), 1, 0),
email_mark_to_market = if_else(str_detect(reference,"mark-to-market"), 1, 0),
email_10K_report = if_else(str_detect(reference, "10-K"), 1, 0),
email_losing_money = if_else(str_detect(reference, "losing money"), 1, 0),
email_SEC_investigation = if_else(str_detect(reference, "SEC"), 1, 0),
email_fear_feeling = if_else(str_detect(reference, "fears"), 1, 0),
email_correction = if_else(str_detect(reference,"correction"),1,0),
email_bankruptcy = if_else(str_detect(reference, "bankruptcy"), 1, 0),
#to get the date in year/month
year_month = as.Date(paste0(year,"-",month,"-01"))) %>% group_by(year_month) %>%
mutate(
sum_topic_meeting = sum(topic_meeting),
sum_topic_business_process = sum(topic_business_process),
sum_topic_core_business = sum(topic_core_business),
sum_topic_enron_event = sum(topic_enron_event),
#for the email we use na.rm = TRUE to allow the sum to be done
sum_email_mark_to_market = sum(email_mark_to_market, na.rm = TRUE),
sum_email_10K_report = sum(email_10K_report, na.rm = TRUE),
sum_email_losing_money = sum(email_losing_money, na.rm = TRUE),
sum_email_SEC_investigation = sum(email_SEC_investigation, na.rm = TRUE),
sum_email_fear_feeling = sum(email_fear_feeling, na.rm = TRUE),
sum_email_correction = sum(email_correction, na.rm = TRUE),
sum_email_bankruptcy = sum(email_bankruptcy, na.rm = TRUE)
) %>% ungroup() %>%
#keep one line per year and month
distinct(year_month, sum_topic_meeting, sum_topic_business_process, sum_topic_core_business, sum_topic_enron_event, sum_email_mark_to_market,
sum_email_10K_report,
sum_email_losing_money,
sum_email_SEC_investigation,
sum_email_fear_feeling,
sum_email_correction,
sum_email_bankruptcy) %>%
filter((sum_email_mark_to_market!=0)|(sum_email_10K_report != 0)|
(sum_email_losing_money!=0)|(sum_email_SEC_investigation!=0)|(sum_email_fear_feeling!=0)|
(sum_email_correction!=0)|(sum_email_bankruptcy!=0)) %>% distinct(reference)
View(df_message)
df <- df_message_status %>% distinct(date, sender, status_sender, subject, reference) %>%
mutate(#count the number of email which contain at least one word in the list of each topic
topic_meeting = if_else(str_detect(subject, topic_meeting), 1, 0),
topic_business_process = if_else(str_detect(subject, topic_business_process), 1, 0),
topic_core_business = if_else(str_detect(subject, topic_core_business), 1, 0),
topic_enron_event = if_else(str_detect(subject, topic_enron_event), 1, 0),
email_mark_to_market = if_else(str_detect(reference,"mark-to-market"), 1, 0),
email_10K_report = if_else(str_detect(reference, "10-K"), 1, 0),
email_losing_money = if_else(str_detect(reference, "losing money"), 1, 0),
email_SEC_investigation = if_else(str_detect(reference, "SEC"), 1, 0),
email_fear_feeling = if_else(str_detect(reference, "fears"), 1, 0),
email_correction = if_else(str_detect(reference,"correction"),1,0),
email_bankruptcy = if_else(str_detect(reference, "bankruptcy"), 1, 0),
#to get the date in year/month
year_month = as.Date(paste0(format(date, "%Y"),"-",format(date,"%m"),"-01"))) %>% group_by(year_month) %>%
mutate(
sum_topic_meeting = sum(topic_meeting),
sum_topic_business_process = sum(topic_business_process),
sum_topic_core_business = sum(topic_core_business),
sum_topic_enron_event = sum(topic_enron_event),
#for the email we use na.rm = TRUE to allow the sum to be done
sum_email_mark_to_market = sum(email_mark_to_market, na.rm = TRUE),
sum_email_10K_report = sum(email_10K_report, na.rm = TRUE),
sum_email_losing_money = sum(email_losing_money, na.rm = TRUE),
sum_email_SEC_investigation = sum(email_SEC_investigation, na.rm = TRUE),
sum_email_fear_feeling = sum(email_fear_feeling, na.rm = TRUE),
sum_email_correction = sum(email_correction, na.rm = TRUE),
sum_email_bankruptcy = sum(email_bankruptcy, na.rm = TRUE)
) %>% ungroup() %>%
#keep one line per year and month
distinct(year_month, sum_topic_meeting, sum_topic_business_process, sum_topic_core_business, sum_topic_enron_event, sum_email_mark_to_market,
sum_email_10K_report,
sum_email_losing_money,
sum_email_SEC_investigation,
sum_email_fear_feeling,
sum_email_correction,
sum_email_bankruptcy) %>%
filter((sum_email_mark_to_market!=0)|(sum_email_10K_report != 0)|
(sum_email_losing_money!=0)|(sum_email_SEC_investigation!=0)|(sum_email_fear_feeling!=0)|
(sum_email_correction!=0)|(sum_email_bankruptcy!=0)) %>% distinct(reference)
df <- df_message_status %>% distinct(date, sender, status_sender, subject, reference) %>%
mutate(#count the number of email which contain at least one word in the list of each topic
topic_meeting = if_else(str_detect(subject, topic_meeting), 1, 0),
topic_business_process = if_else(str_detect(subject, topic_business_process), 1, 0),
topic_core_business = if_else(str_detect(subject, topic_core_business), 1, 0),
topic_enron_event = if_else(str_detect(subject, topic_enron_event), 1, 0),
email_mark_to_market = if_else(str_detect(reference,"mark-to-market"), 1, 0),
email_10K_report = if_else(str_detect(reference, "10-K"), 1, 0),
email_losing_money = if_else(str_detect(reference, "losing money"), 1, 0),
email_SEC_investigation = if_else(str_detect(reference, "SEC"), 1, 0),
email_fear_feeling = if_else(str_detect(reference, "fears"), 1, 0),
email_correction = if_else(str_detect(reference,"correction"),1,0),
email_bankruptcy = if_else(str_detect(reference, "bankruptcy"), 1, 0),
#to get the date in year/month
year_month = as.Date(paste0(format(date, "%Y"),"-",format(date,"%m"),"-01"))) %>% group_by(year_month) %>%
mutate(
sum_topic_meeting = sum(topic_meeting),
sum_topic_business_process = sum(topic_business_process),
sum_topic_core_business = sum(topic_core_business),
sum_topic_enron_event = sum(topic_enron_event),
#for the email we use na.rm = TRUE to allow the sum to be done
sum_email_mark_to_market = sum(email_mark_to_market, na.rm = TRUE),
sum_email_10K_report = sum(email_10K_report, na.rm = TRUE),
sum_email_losing_money = sum(email_losing_money, na.rm = TRUE),
sum_email_SEC_investigation = sum(email_SEC_investigation, na.rm = TRUE),
sum_email_fear_feeling = sum(email_fear_feeling, na.rm = TRUE),
sum_email_correction = sum(email_correction, na.rm = TRUE),
sum_email_bankruptcy = sum(email_bankruptcy, na.rm = TRUE)
) %>% ungroup() %>%
#keep one line per year and month
distinct(year_month, subject, reference, sum_topic_meeting, sum_topic_business_process, sum_topic_core_business, sum_topic_enron_event, sum_email_mark_to_market,
sum_email_10K_report,
sum_email_losing_money,
sum_email_SEC_investigation,
sum_email_fear_feeling,
sum_email_correction,
sum_email_bankruptcy) %>%
filter((sum_email_mark_to_market!=0)|(sum_email_10K_report != 0)|
(sum_email_losing_money!=0)|(sum_email_SEC_investigation!=0)|(sum_email_fear_feeling!=0)|
(sum_email_correction!=0)|(sum_email_bankruptcy!=0))
View(df)
str_count(df$subject, "bankrup")
sum(str_count(df$subject, "bankrup"))
sum(str_count(df$subject, "gas"))
,
word_list <- c("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","all","time","meet","look","week","day","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","date","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
for(i in length(word_list)){
search <- as.character(word_list[i])
print(search)
}
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","all","time","meet","look","week","day","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","date","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
for(i in length(word_list)){
search <- as.character(word_list[i])
print(search)
}
for(i in length(word_list)){
search <- as.character(word_list[[i]])
print(search)
}
word_list[[1]]
word_list[[8]]
word_list[9]
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
print(search)
}
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","all","time","meet","look","week","day","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","date","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
word_count <- c()
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(df$subject, search))
word_count <- c(word_count, nb)
}
word_count
library(wordcloud)
par(bg = "black")
wordcloud(word_list, word_count, col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
word_list <- list("enron","deal","agreement","chang","contract","corp","fax","houston","date","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
word_count <- c()
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(df$subject, search))
word_count <- c(word_count, nb)
}
par(bg = "black")
wordcloud(word_list, word_count, col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
?rot.per
?wordcloud
wordcloud(word_list, word_count, max.words=length(word_list), col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "white")
wordcloud(word_list, word_count, max.words=length(word_list), col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "darkgrey")
wordcloud(word_list, word_count, max.words=length(word_list), col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "black")
wordcloud(word_list, word_count, max.words=length(word_list), col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
?wordcloud
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","all","time","meet","look","week","day","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","date","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
word_count <- c()
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(df$subject, search))
word_count <- c(word_count, nb)
}
par(bg = "black")
wordcloud(word_list, word_count, max.words=length(word_list), col=terrain.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "white")
wordcloud(word_list, word_count, max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "grey")
wordcloud(word_list, word_count, max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
par(bg = "black")
wordcloud(word_list, word_count, max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","time","meet","look","week","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear")
word_count <- c()
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(df$subject, search))
word_count <- c(word_count, nb)
}
par(bg = "black")
wordcloud(word_list, word_count, max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count,min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","time","meet","look","week","dont","vinc","talk",
"enron","deal","agreement","chang","contract","corp","fax","houston","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear", "investigation")
word_count <- c()
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(df$subject, search))
word_count <- c(word_count, nb)
}
par(bg = "black")
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
word_ref <- list("mark-to-market", "10-K", "losing money", "SEC", "investigation", "fears", "correction", "bankruptcy", )
word_ref <- list("mark-to-market", "10-K", "losing money", "SEC", "investigation", "fears", "correction", "bankruptcy" )
ref_count <- c()
for(i in seq_along(word_ref)){
search <- as.character(word_ref[[i]])
nb <- sum(str_count(df$reference, search))
ref_count <- c(ref_count, nb)
}
wordcloud(word_ref, ref_count, min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_ref, ref_count, min.freq = 10 ,max.words=length(word_ref), col=heat.colors(length(word_ref), alpha = 0.9), rot.per = 0.3)
wordcloud(word_ref, ref_count ,max.words=length(word_ref), col=heat.colors(length(word_ref), alpha = 0.9), rot.per = 0.3)
wordcloud(word_ref, ref_count, col=heat.colors(length(word_ref), alpha = 0.9), rot.per = 0.3)
ref_count
word_ref <- list("mark-to-market", "10-K", "losing money", "SEC", "investigation", "fears", "correction", "bankruptcy" )
ref_count <- c()
for(i in seq_along(word_ref)){
search <- as.character(word_ref[[i]])
nb <- sum(str_count(df$reference, search))
ref_count <- c(ref_count, nb)
}
for(i in seq_along(word_ref)){
search <- as.character(word_ref[[i]])
print(search)
nb <- sum(str_count(df$reference, search))
ref_count <- c(ref_count, nb)
}
word_ref <- list("mark-to-market", "10-K", "losing money", "SEC", "investigation", "fears", "correction", "bankruptcy" )
ref_count <- c()
for(i in seq_along(word_ref)){
search <- as.character(word_ref[[i]])
nb <- sum(str_count(df$reference,regex(search, ignore_case = TRUE)))
ref_count <- c(ref_count, nb)
}
for(i in seq_along(word_ref)){
search <- as.character(word_ref[[i]])
nb <- str_count(df$reference,regex(search, ignore_case = TRUE))
ref_count <- c(ref_count, nb)
}
ref_count
count_word <- sapply(search_words, function(word){
str_count(reference$email_text, regex(paste0("\\b", word, "\\b"), ignore_case = TRUE))
})
count_word <- sapply(word_ref, function(word){
str_count(reference$email_text, regex(paste0("\\b", word, "\\b"), ignore_case = TRUE))
})
count_word <- sapply(word_ref, function(word){
str_count(df$reference, regex(paste0("\\b", word, "\\b"), ignore_case = TRUE))
})
total_counts <- colSums(count_word)
total_counts
library(tm)
dataset_corpus <- Vcorpus(df$reference)
dataset_corpus <- VCorpus(df$reference)
#construction of the data set for measuring the frequency of the different topic in the email subject as well as the number of email with specific word, we focus on the sender status
email_subject_send <- df_message_status %>% distinct(date, year, month, sender, status_sender, subject, reference) %>%
mutate(#count the number of email which contain at least one word in the list of each topic
topic_meeting = if_else(str_detect(subject, topic_meeting), 1, 0),
topic_business_process = if_else(str_detect(subject, topic_business_process), 1, 0),
topic_core_business = if_else(str_detect(subject, topic_core_business), 1, 0),
topic_enron_event = if_else(str_detect(subject, topic_enron_event), 1, 0),
email_mark_to_market = if_else(str_detect(reference,"mark-to-market"), 1, 0),
email_10K_report = if_else(str_detect(reference, "10-K"), 1, 0),
email_losing_money = if_else(str_detect(reference, "losing money"), 1, 0),
email_SEC_investigation = if_else(str_detect(reference, "SEC"), 1, 0),
email_fear_feeling = if_else(str_detect(reference, "fears"), 1, 0),
email_correction = if_else(str_detect(reference,"correction"),1,0),
email_bankruptcy = if_else(str_detect(reference, "bankruptcy"), 1, 0),
#to get the date in year/month
year_month = as.Date(paste0(year,"-",month,"-01")))
df_message_status <- df_message_status %>%
mutate(year = format(date,"%Y"), #extract the year from the date
month = format(date, "%m")) %>% #extract the month from the date
transform( #to put the variable in wright type
year = as.factor(year),
month = as.factor(month))
#construction of the data set for measuring the frequency of the different topic in the email subject as well as the number of email with specific word, we focus on the sender status
email_subject_send <- df_message_status %>% distinct(date, year, month, sender, status_sender, subject, reference) %>%
mutate(#count the number of email which contain at least one word in the list of each topic
topic_meeting = if_else(str_detect(subject, topic_meeting), 1, 0),
topic_business_process = if_else(str_detect(subject, topic_business_process), 1, 0),
topic_core_business = if_else(str_detect(subject, topic_core_business), 1, 0),
topic_enron_event = if_else(str_detect(subject, topic_enron_event), 1, 0),
email_mark_to_market = if_else(str_detect(reference,"mark-to-market"), 1, 0),
email_10K_report = if_else(str_detect(reference, "10-K"), 1, 0),
email_losing_money = if_else(str_detect(reference, "losing money"), 1, 0),
email_SEC_investigation = if_else(str_detect(reference, "SEC"), 1, 0),
email_fear_feeling = if_else(str_detect(reference, "fears"), 1, 0),
email_correction = if_else(str_detect(reference,"correction"),1,0),
email_bankruptcy = if_else(str_detect(reference, "bankruptcy"), 1, 0),
#to get the date in year/month
year_month = as.Date(paste0(year,"-",month,"-01")))
#compute the sum of each topics for each month of each year study
email_subject_send_graph <- email_subject_send %>%
group_by(year_month) %>%
mutate(
sum_topic_meeting = sum(topic_meeting),
sum_topic_business_process = sum(topic_business_process),
sum_topic_core_business = sum(topic_core_business),
sum_topic_enron_event = sum(topic_enron_event),
#for the email we use na.rm = TRUE to allow the sum to be done
sum_email_mark_to_market = sum(email_mark_to_market, na.rm = TRUE),
sum_email_10K_report = sum(email_10K_report, na.rm = TRUE),
sum_email_losing_money = sum(email_losing_money, na.rm = TRUE),
sum_email_SEC_investigation = sum(email_SEC_investigation, na.rm = TRUE),
sum_email_fear_feeling = sum(email_fear_feeling, na.rm = TRUE),
sum_email_correction = sum(email_correction, na.rm = TRUE),
sum_email_bankruptcy = sum(email_bankruptcy, na.rm = TRUE)
) %>% ungroup() %>%
#keep one line per year and month
distinct(year_month, subject, sum_topic_meeting, sum_topic_business_process, sum_topic_core_business, sum_topic_enron_event, sum_email_mark_to_market,
sum_email_10K_report,
sum_email_losing_money,
sum_email_SEC_investigation,
sum_email_fear_feeling,
sum_email_correction,
sum_email_bankruptcy)
#display the different topic trend in the email subject over the study's period
email_subject_send_graph %>% select(year_month, starts_with("sum_topic_")) %>%
#change the orientation of the data set
pivot_longer(
cols = 2:5,
names_to = "topics",
values_to = "value") %>%
#scatter plot and trend line
ggplot(aes(year_month,value, color=topics))+
geom_line(size = 1)+
#label, axis, and legend
labs(color = "Email subject topics",
title = "Email topics in function of the year",
x = "year",
y = "Number of email per topics") +
#to display the year and month, every 3 months for a better reading
scale_x_date(date_labels = "%Y-%m", date_breaks = "3 months")+
scale_color_manual(#to get only the customization for the email categories
values = topic_colors[8:11],
labels = topic_label[8:11])
#the list of category studied and their related color in each plot
topic_colors <- c("sum_email_SEC_investigation" = "darkred",
"sum_email_10K_report" = "pink",
"sum_email_bankruptcy" = "springgreen4",
"sum_email_correction" = "salmon",
"sum_email_mark_to_market" = "purple",
"sum_email_losing_money" = "turquoise",
"sum_email_fear_feeling" = "violetred",
"sum_topic_business_process" = "steelblue4",
"sum_topic_core_business" = "orchid",
"sum_topic_meeting" = "chocolate4",
"sum_topic_enron_event" = "yellowgreen")
#the list of category and their related label on the plot
topic_label <- c("sum_email_SEC_investigation" = "SEC Investigation email",
"sum_email_10K_report" = "10-K report email",
"sum_email_bankruptcy" = "Bankruptcy email",
"sum_email_correction" = "Correction email",
"sum_email_mark_to_market" = "mark-to-market process email",
"sum_email_losing_money" = "Losing money email",
"sum_email_fear_feeling" = "Fear feeling email",
"sum_topic_business_process" = "Business process email topic",
"sum_topic_core_business" = "Core Business email topic",
"sum_topic_meeting" = "Meeting email topic",
"sum_topic_enron_event" = "Enron Event")
#compute the sum of each topics for each month of each year study
email_subject_send_graph <- email_subject_send %>%
group_by(year_month) %>%
mutate(
sum_topic_meeting = sum(topic_meeting),
sum_topic_business_process = sum(topic_business_process),
sum_topic_core_business = sum(topic_core_business),
sum_topic_enron_event = sum(topic_enron_event),
#for the email we use na.rm = TRUE to allow the sum to be done
sum_email_mark_to_market = sum(email_mark_to_market, na.rm = TRUE),
sum_email_10K_report = sum(email_10K_report, na.rm = TRUE),
sum_email_losing_money = sum(email_losing_money, na.rm = TRUE),
sum_email_SEC_investigation = sum(email_SEC_investigation, na.rm = TRUE),
sum_email_fear_feeling = sum(email_fear_feeling, na.rm = TRUE),
sum_email_correction = sum(email_correction, na.rm = TRUE),
sum_email_bankruptcy = sum(email_bankruptcy, na.rm = TRUE)
) %>% ungroup() %>%
#keep one line per year and month
distinct(year_month, subject, sum_topic_meeting, sum_topic_business_process, sum_topic_core_business, sum_topic_enron_event, sum_email_mark_to_market,
sum_email_10K_report,
sum_email_losing_money,
sum_email_SEC_investigation,
sum_email_fear_feeling,
sum_email_correction,
sum_email_bankruptcy)
#display the different topic trend in the email subject over the study's period
email_subject_send_graph %>% select(year_month, starts_with("sum_topic_")) %>%
#change the orientation of the data set
pivot_longer(
cols = 2:5,
names_to = "topics",
values_to = "value") %>%
#scatter plot and trend line
ggplot(aes(year_month,value, color=topics))+
geom_line(size = 1)+
#label, axis, and legend
labs(color = "Email subject topics",
title = "Email topics in function of the year",
x = "year",
y = "Number of email per topics") +
#to display the year and month, every 3 months for a better reading
scale_x_date(date_labels = "%Y-%m", date_breaks = "3 months")+
scale_color_manual(#to get only the customization for the email categories
values = topic_colors[8:11],
labels = topic_label[8:11])
#the list of word research in the subject
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","time","meet","look","week","dont","vinc",
"talk","enron","deal","agreement","chang","contract","corp","fax","houston","america","risk","analy","confidential","correction",
"market","gas","price","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear", "investigation")
#initiate a vector for registering their frequency
word_count <- c()
##iterate over the list and count the number of time we see each word in the list
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(email_subject_send_graph$subject, search))
word_count <- c(word_count, nb)
}
#draw a wordcloud which represent the words frequency
par(bg = "black")
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
#the list of word research in the subject
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","time","meet","look","week","dont","vinc",
"talk","enron","deal","agreement","chang","contract","corp","fax","houston","america","risk","analy","confidential","correction",
"market","gas","price","date","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear", "investigation")
#initiate a vector for registering their frequency
word_count <- c()
##iterate over the list and count the number of time we see each word in the list
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(email_subject_send_graph$subject, search))
word_count <- c(word_count, nb)
}
#draw a wordcloud which represent the words frequency
par(bg = "black")
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
#the list of word research in the subject
word_list <- list("message","origin","pleas","email","thank","attach","file","copi","inform","receiv","thank","time","meet","look","week","dont","vinc",
"talk","enron","deal","agreement","chang","contract","corp","fax","houston","america","risk","analy","confidential","correction",
"market","gas","price","date","power","company","energy","trade","busi","servic","manag",
"bankrup","SEC","MTM","fear", "investigation")
#initiate a vector for registering their frequency
word_count <- c()
##iterate over the list and count the number of time we see each word in the list
for(i in seq_along(word_list)){
search <- as.character(word_list[[i]])
nb <- sum(str_count(email_subject_send_graph$subject, search))
word_count <- c(word_count, nb)
}
#draw a wordcloud which represent the words frequency
par(bg = "black")
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=heat.colors(length(word_list), alpha = 0.9), rot.per = 0.3)
wordcloud(word_list, word_count, min.freq = 10 ,max.words=length(word_list), col=rainbow(length(word_list), alpha = 0.9), rot.per = 0.3)
