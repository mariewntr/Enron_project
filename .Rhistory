labels = topic_label)+
theme(legend.text.position = "bottom")
})
#analyze the content and subject of email for specific enron worker
output$EnronWorkerSend <- renderPlot({
person_of_interest_send %>% filter(email_label_sender == input$worker_choice_send) %>%
group_by(year,month) %>%
count() %>% ggplot(aes(month, n, fill = month))+
geom_bar(stat = "identity") +
facet_grid(~year)+
labs(title = input$worker_choice_send,
y = "Email count per month")+
scale_fill_manual(
values = month_color,
labels = month_label)+
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank())
})
output$EnronWorkerRec <- renderPlot({
person_of_interest_reciveid %>% filter(email_label_recipient == input$worker_choice_rec)%>%
group_by(year,month) %>%
count() %>% ggplot(aes(month, n, fill = month))+
geom_bar(stat = "identity") +
facet_grid(~year)+
labs(title = input$worker_choice_rec,
y = "Email count per month")+
scale_fill_manual(
values = month_color,
labels = month_label)+
theme(legend.position = "bottom",
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank())
})
output$EnronWorkerSubjectSend <- renderPlot({
person_of_interest_send_subject %>% filter(
year_month >= input$date_range_actor[1], #for year_month is greater than the min date in the range
year_month <= input$date_range_actor[2], #for year_month is smaller than the min date in the range
email_label_sender == input$worker_choice_send,
topic_email %in% names(topic_label[topic_label %in% input$subject_choice_actor]) #for selecting the topics
) %>%
ggplot(aes(year_month,value, color = topic_email))+
geom_line(size = 1) +
labs(color = "Email subject and content topics",
title = input$worker_choice_send,
y = "Number of email per topics",
x = "Study period")+
scale_x_date(date_labels = "%Y-%m", date_breaks = "3 months")+
scale_color_manual(values = topic_colors,
labels = topic_label)+
theme(legend.text.position = "bottom")
})
output$EnronWorkerSubjectRec <- renderPlot({
person_of_interest_reciveid_subject %>% filter(
year_month >= input$date_range_actor[1], #for year_month is greater than the min date in the range
year_month <= input$date_range_actor[2], #for year_month is smaller than the min date in the range
email_label_recipient == input$worker_choice_rec,
topic_email %in% names(topic_label[topic_label %in% input$subject_choice_actor]) #for selecting the topics
)%>%
ggplot(aes(year_month,value, color = topic_email))+
geom_line(size = 1) +
scale_x_date(date_labels = "%Y-%m", date_breaks = "3 months")+
labs(color = "Email subject and content topics",
title = input$worker_choice_rec,
y = "Number of email per topics",
x = "Study period")+
scale_color_manual(values = topic_colors,
labels = topic_label)+
theme(legend.text.position = "bottom")
})
}
shinyApp(ui, server)
#dashboard of the Enron email analysis
ui <- dashboardPage(
dashboardHeader(
title = "Enron Company"
),
#the different page in the dashboard
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("General", tabName = "dashboard", #icon = icon("dashboard")
),
menuItem("Email content analysis", tabName = "email", #icon = icon("file-text")
),
menuItem("Email exchange per status", tabName = "workerExchange", #icon = icon("envelope"),
),
menuItem("Email analyze per status", tabName = "status", #icon = icon("briefcase"),
),
menuItem("The most active Enron worker", tabName = "active", icon = #icon("user-circle")
),
menuItem("Potential fraud actor", tabName = "actor", #icon = icon("wpexplorer"))
)),
#design the side bar for the email tab
conditionalPanel(
condition = "input.tabs == 'email'",
dateRangeInput("date_range",
label = "Select the period: ",
start = min(email_subject_send$year_month),
end = max(email_subject_send$year_month),
format = "yyyy-mm",
startview = "year"),
selectizeInput(
"subject_choice", "Select the topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)),
conditionalPanel(#sidebar for the status tab
condition = "input.tabs == 'status'",
#date range slicer
dateRangeInput("date_range_status",
label = "Select the period: ",
start = min(email_subject_send$year_month),
end = max(email_subject_send$year_month),
format = "yyyy-mm",
startview = "year"),
#status selector
selectizeInput(
"status_choice_status", "Select status:",
choices = unique(status_email_subject_send$status_sender),
selected = NULL),
#topic selector
selectizeInput(
"subject_choice_status", "Select subject topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)
),
conditionalPanel(#sidebar for the actor tab
condition = "input.tabs == 'actor'",
#date range slicer
dateRangeInput("date_range_actor",
label = "Select the period: ",
start = min(person_of_interest_send_subject$year_month),
end = max(person_of_interest_send_subject$year_month),
format = "yyyy-mm",
startview = "year"),
#actor selector for send
selectizeInput(
"worker_choice_send", "Select status sender:",
choices = unique(person_of_interest_send_subject$email_label_sender),
selected = NULL),
#actor selector for received
selectizeInput(
"worker_choice_rec", "Select status recipient:",
choices = unique(person_of_interest_reciveid_subject$email_label_recipient),
selected = NULL),
#topic selector
selectizeInput(
"subject_choice_actor", "Select subject topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)
)),
#the body of the dashboard
dashboardBody(
tabItems(
# First tab content
tabItem(
#name of the tab
tabName = "dashboard",
fluidRow(width = 12,
box(width = 12,
title = "Percentage of employee in the employee list with a know status",
switchInput(inputId = "show_na", value = FALSE, label = "show NA"),
plotOutput("NbWorker")
)
),
br(),
fluidRow(width = 12,
box(width = 12,
title = "Key number",
fluidRow(width = 12,
valueBoxOutput("TotalEmail"),valueBoxOutput("PctgStatus"), valueBoxOutput("PctgGeneralAdd")),
fluidRow(width = 12,
valueBoxOutput("NbSend"),valueBoxOutput("NbRec"))
))),
#2nd tab content
tabItem(tabName = "workerExchange",
fluidRow(
tabBox(width = 6,
title = "Email send and received visualization",
id = "tab1",
tabPanel("Send", plotOutput("StatusSend")),
tabPanel("Received", plotOutput("StatusRec"))
),
tabBox(width = 6,
title = "Email send and received descriptive statistics",
id = "tab2",
tabPanel("Statistic Send", tableOutput("StatSend")),
tabPanel("Statistic Received", tableOutput("StatRec")))),
br(),
fluidRow(column(3, h4("Email exchange flux in 1999"), plotOutput("flux1999")),
column(3, h4("Email exchange flux in 2000"), plotOutput("flux2000")),
column(3, h4("Email exchange flux in 2002"), plotOutput("flux2001")),
column(3, h4("Email exchange flux in 2002"), plotOutput("flux2002")))
),
# 3rd tab content
tabItem(tabName = "active",
fluidRow(
tabBox(width = 12,
id = "tab3",
tabPanel("Send", plotOutput("Top10Send")),
tabPanel("Received", plotOutput("Top10Rec")))),
fluidRow(
tabBox(width = 12, id = "tab4",
tabPanel("Send",
fluidRow(
column(width = 4, plotOutput("JeffStatusSendViz")),
column(width = 4, plotOutput("JeffWorkerSendViz")),
column(width = 4, tableOutput("JeffSendStat")))),
tabPanel("Received",
fluidRow(
column(width = 4, plotOutput("JeffRecViz")),
column(width = 4, plotOutput("JeffWorkerRecViz")),
column(width = 4, tableOutput("JeffRecStat")))))
)),
#4th tab content
tabItem(tabName = "email",
fluidRow(tabBox(width = 12,
tabPanel("Send",plotOutput("EmailSend")),
tabPanel("Received",plotOutput("Emailrec"))
)),
fluidRow(
tooltip(
actionButton("show", "Reactivity",
"Modified the study period and/or the topics display on the graph through the slicer and selector in the sidebar.",
id = "tip",
placement = "right"),
verbatimTextOutput("rules_email")),
tabBox(width = 12,
tabPanel("Send",
fluidRow(column(width = 8,
plotOutput("EmailSubjectSend")),
column(width = 4,
plotOutput("EmailWordSend")
))),
tabPanel("Received",
fluidRow(column(width = 8,
plotOutput("EmailSubjectRec")),
column(width = 4,
plotOutput("EmailWordRec"))))))
),
# 5th tab content
tabItem(tabName = "status",
fluidRow(
tabBox(width = 12,
id = "tab5",
tabPanel("Send", plotOutput("nbEmailSendStatus")
),
tabPanel("Received",  plotOutput("nbEmailRecStatus")))),
br(),
fluidRow(
tabBox(width=12,
id = "tab4",
tabPanel("Send",
fluidRow(
column(width = 8,
plotOutput("SubjectEmailSendStatus")),
column(width = 4,
plotOutput("WordcloudSendStatus")))),
tabPanel("Received",
fluidRow(
column(width = 8,
plotOutput("SubjectEmailRecStatus")),
column(width = 4,
plotOutput("WordcloudRecStatus"))))))
),
# 6th tab content
tabItem(tabName = "actor",
fluidRow(
box(title = "Number of email send",
plotOutput("EnronWorkerSend")
),
box(title = "Number of email received",
plotOutput("EnronWorkerRec")
)),
fluidRow(
box(title = "Email send, subject and content analyze",
plotOutput("EnronWorkerSubjectSend")
),
box(title = "Email received, subject and content analyze",
plotOutput("EnronWorkerSubjectRec")
))
)))
)
#dashboard of the Enron email analysis
ui <- dashboardPage(
dashboardHeader(
title = "Enron Company"
),
#the different page in the dashboard
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("General", tabName = "dashboard"#, icon = icon("dashboard")
),
menuItem("Email content analysis", tabName = "email"#, icon = icon("file-text")
),
menuItem("Email exchange per status", tabName = "workerExchange"#, icon = icon("envelope"),
),
menuItem("Email analyze per status", tabName = "status"#, icon = icon("briefcase"),
),
menuItem("The most active Enron worker", tabName = "active"#, icon = icon("user-circle")
),
menuItem("Potential fraud actor", tabName = "actor"#, icon = icon("wpexplorer"))
)),
#design the side bar for the email tab
conditionalPanel(
condition = "input.tabs == 'email'",
dateRangeInput("date_range",
label = "Select the period: ",
start = min(email_subject_send$year_month),
end = max(email_subject_send$year_month),
format = "yyyy-mm",
startview = "year"),
selectizeInput(
"subject_choice", "Select the topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)),
conditionalPanel(#sidebar for the status tab
condition = "input.tabs == 'status'",
#date range slicer
dateRangeInput("date_range_status",
label = "Select the period: ",
start = min(email_subject_send$year_month),
end = max(email_subject_send$year_month),
format = "yyyy-mm",
startview = "year"),
#status selector
selectizeInput(
"status_choice_status", "Select status:",
choices = unique(status_email_subject_send$status_sender),
selected = NULL),
#topic selector
selectizeInput(
"subject_choice_status", "Select subject topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)
),
conditionalPanel(#sidebar for the actor tab
condition = "input.tabs == 'actor'",
#date range slicer
dateRangeInput("date_range_actor",
label = "Select the period: ",
start = min(person_of_interest_send_subject$year_month),
end = max(person_of_interest_send_subject$year_month),
format = "yyyy-mm",
startview = "year"),
#actor selector for send
selectizeInput(
"worker_choice_send", "Select status sender:",
choices = unique(person_of_interest_send_subject$email_label_sender),
selected = NULL),
#actor selector for received
selectizeInput(
"worker_choice_rec", "Select status recipient:",
choices = unique(person_of_interest_reciveid_subject$email_label_recipient),
selected = NULL),
#topic selector
selectizeInput(
"subject_choice_actor", "Select subject topic:",
choices = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
selected = c("Business process email subject","Core Business email subject","Meeting email subject",
"Enron Event email subject","Business process email","Core business email","Meeting email","Enron's event email"),
multiple = TRUE)
)),
#the body of the dashboard
dashboardBody(
tabItems(
# First tab content
tabItem(
#name of the tab
tabName = "dashboard",
fluidRow(width = 12,
box(width = 12,
title = "Percentage of employee in the employee list with a know status",
switchInput(inputId = "show_na", value = FALSE, label = "show NA"),
plotOutput("NbWorker")
)
),
br(),
fluidRow(width = 12,
box(width = 12,
title = "Key number",
fluidRow(width = 12,
valueBoxOutput("TotalEmail"),valueBoxOutput("PctgStatus"), valueBoxOutput("PctgGeneralAdd")),
fluidRow(width = 12,
valueBoxOutput("NbSend"),valueBoxOutput("NbRec"))
))),
#2nd tab content
tabItem(tabName = "workerExchange",
fluidRow(
tabBox(width = 6,
title = "Email send and received visualization",
id = "tab1",
tabPanel("Send", plotOutput("StatusSend")),
tabPanel("Received", plotOutput("StatusRec"))
),
tabBox(width = 6,
title = "Email send and received descriptive statistics",
id = "tab2",
tabPanel("Statistic Send", tableOutput("StatSend")),
tabPanel("Statistic Received", tableOutput("StatRec")))),
br(),
fluidRow(column(3, h4("Email exchange flux in 1999"), plotOutput("flux1999")),
column(3, h4("Email exchange flux in 2000"), plotOutput("flux2000")),
column(3, h4("Email exchange flux in 2002"), plotOutput("flux2001")),
column(3, h4("Email exchange flux in 2002"), plotOutput("flux2002")))
),
# 3rd tab content
tabItem(tabName = "active",
fluidRow(
tabBox(width = 12,
id = "tab3",
tabPanel("Send", plotOutput("Top10Send")),
tabPanel("Received", plotOutput("Top10Rec")))),
fluidRow(
tabBox(width = 12, id = "tab4",
tabPanel("Send",
fluidRow(
column(width = 4, plotOutput("JeffStatusSendViz")),
column(width = 4, plotOutput("JeffWorkerSendViz")),
column(width = 4, tableOutput("JeffSendStat")))),
tabPanel("Received",
fluidRow(
column(width = 4, plotOutput("JeffRecViz")),
column(width = 4, plotOutput("JeffWorkerRecViz")),
column(width = 4, tableOutput("JeffRecStat")))))
)),
#4th tab content
tabItem(tabName = "email",
fluidRow(tabBox(width = 12,
tabPanel("Send",plotOutput("EmailSend")),
tabPanel("Received",plotOutput("Emailrec"))
)),
fluidRow(
tooltip(
actionButton("show", "Reactivity",
"Modified the study period and/or the topics display on the graph through the slicer and selector in the sidebar.",
id = "tip",
placement = "right"),
verbatimTextOutput("rules_email")),
tabBox(width = 12,
tabPanel("Send",
fluidRow(column(width = 8,
plotOutput("EmailSubjectSend")),
column(width = 4,
plotOutput("EmailWordSend")
))),
tabPanel("Received",
fluidRow(column(width = 8,
plotOutput("EmailSubjectRec")),
column(width = 4,
plotOutput("EmailWordRec"))))))
),
# 5th tab content
tabItem(tabName = "status",
fluidRow(
tabBox(width = 12,
id = "tab5",
tabPanel("Send", plotOutput("nbEmailSendStatus")
),
tabPanel("Received",  plotOutput("nbEmailRecStatus")))),
br(),
fluidRow(
tabBox(width=12,
id = "tab4",
tabPanel("Send",
fluidRow(
column(width = 8,
plotOutput("SubjectEmailSendStatus")),
column(width = 4,
plotOutput("WordcloudSendStatus")))),
tabPanel("Received",
fluidRow(
column(width = 8,
plotOutput("SubjectEmailRecStatus")),
column(width = 4,
plotOutput("WordcloudRecStatus"))))))
),
# 6th tab content
tabItem(tabName = "actor",
fluidRow(
box(title = "Number of email send",
plotOutput("EnronWorkerSend")
),
box(title = "Number of email received",
plotOutput("EnronWorkerRec")
)),
fluidRow(
box(title = "Email send, subject and content analyze",
plotOutput("EnronWorkerSubjectSend")
),
box(title = "Email received, subject and content analyze",
plotOutput("EnronWorkerSubjectRec")
))
)))
)
